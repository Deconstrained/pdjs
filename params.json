{"name":"Pdjs","tagline":"JavaScript wrapper for the PagerDuty API","body":"pdjs (base)\r\n====\r\n\r\nThis is a simple JavaScript wrapper to the [PagerDuty API](http://developer.pagerduty.com/)\r\n\r\n    PDJS = new PDJSobj({\r\n      subdomain: \"webdemo\",\r\n      token: \"CkNpsqH9i6yTGus8VDzA\",\r\n    })\r\n\r\n    PDJS.api({\r\n      res: \"services\",\r\n      data: {\r\n        limit: 20,\r\n      },\r\n      success: function (json) {\r\n        console.log(JSON.stringify(json))\r\n      },\r\n    })\r\n\r\n## Making an API request\r\n\r\n1. Create a PDJSobj, with a subdomain and a token/api key\r\n2. Call an api request:\r\n  * the **res** parameter is the URL path of the resource you want\r\n  * the **data** parameter is optional\r\n3. Everything is asynchronous so you'll need:\r\n  * a *function* to use on **success**\r\n  * also optional is an **error** function\r\n\r\n## The *api_all* helper\r\n\r\nThere's also a helper method that will handle limits and offsets for lists longer than 100 elements:\r\n\r\n    PDJS.api_all({\r\n      res: \"incidents\",\r\n      data: {\r\n        since: \"2013-07-14T09:53:17-07:00\",\r\n        until: \"2013-08-14T09:53:17-07:00\",\r\n        status: \"resolved\",\r\n        fields: \"incident_number,status,created_on,service,last_status_change_by,last_status_change_on\"\r\n      },\r\n      final_success: function(data) {\r\n        console.log(data.total + \" objects!\");\r\n        console.log(data);\r\n      },\r\n      incremental_success: function(data) {\r\n        console.log(\"Got data\");\r\n      }\r\n    })\r\n\r\nIt works the same, except you'll need to specify one or more of:\r\n\r\n  * a *function* to run on **final_success** at the end\r\n  * a *function* to run on each **incremental_success**\r\n\r\nThat's kind of nifty.\r\n\r\n## Examples\r\n\r\nThere's an examples directory:\r\n\r\n  * **examples/incidents.html** polls the [incidents](http://developer.pagerduty.com/documentation/rest/incidents/list) api and displays the triggered & acknowledged incidents\r\n  * **examples/report.html** shows off *api_all* by looping through all the events on my webdemo account for the last 30 days and prints them out as a CSV-esque thing that you could paste into a CSV file.\r\n\r\n## To compile the base script:\r\nThis is written in [CoffeeScript](http://coffeescript.org/), so you're going to have to compile it to get JavaScript\r\n\r\ncoffee --output js/ --compile --watch --join pdjsbase.js coffeebase/ &\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}